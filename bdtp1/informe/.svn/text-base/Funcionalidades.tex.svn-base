\section{Funcionalidades de la Base de Datos}
 
\subsection{Introducci\'on}

En este trabajo tuvimos que realizar stored procedures y triggers para poder indicar los paises que iutulizaron a todos sus jugadores como local, luego tuvimos que efectuar un listado de estadisticas indicando el promedio de las mismas para todos los jugadores que tuvieron participaci\'on, y finalmente nos encotramos con la necesidad de entregar una lista de \'arbitros permitidos para dirigir un partido creado.
Por otro lado insertamos restricciones necesarias para que un arbitro no pueda dirigir partidos que juega la selecci\'on de su pa\'is, y tambien para evitar una incorrecta carga de datos en el sistema. Esto lo hicimos a trav\'es de triggers que fallan si no cumplen con las condiciones.


\subsection{Stored Procedures}

\subsubsection{Procedure 1}

\begin{verbatim}
USE `TP1BD`;
DROP procedure IF EXISTS `Selecciones_Usaron_Todos_Jugs`;

DELIMITER $$
USE `TP1BD`$$
CREATE PROCEDURE `TP1BD`.`Selecciones_Usaron_Todos_Jugs` ()
BEGIN

select 
    p.nombre
from
    Seleccion s,
    Pais p
where
    s.idPais = p.idPais
        and not exists( select 
            i.idSeleccion
        from
            Jugador j, Integrante i
        where
            s.idSeleccion = i.idSeleccion
                and j.nroPasaporte = i.nroPasaporte
                and j.nroPasaporte not in (select distinct
                    p.nroPasaporte
                from
                    participacion p
                where
                    p.esTitular))
and exists (select * from Partido p  where p.idSeleccionLocal = s.idSeleccion or p.idSeleccionVisitante = s.idSeleccion);


END$$

DELIMITER ;
\end{verbatim}


\subsubsection{Estadistica Jugadores}

\begin{verbatim}
USE `tp1bd`;
DROP procedure IF EXISTS `Estadisticas_Jugadores`;

DELIMITER $$
USE `tp1bd`$$
CREATE PROCEDURE `tp1bd`.`Estadisticas_Jugadores` ()
BEGIN
select 
    Nombre,
    Partidos_Jugados,
    Minutos,
    Puntos,
    Rebotes,
    Asistencias,
    (Puntos / Partidos_Jugados) Ptos_por_partido,
    (Asistencias / Partidos_Jugados) Asistencias_por_partido,
    (Rebotes / Partidos_Jugados) Rebotes_por_partido
from
    (select 
        p.nroPasaporte,
            i.Nombre,
            sum(minutos) Minutos,
            sum(rebotes) Rebotes,
            sum(puntos) Puntos,
            sum(asistencias) Asistencias,
            count(1) Partidos_Jugados
    from
        integrante i, estadistica e, participacion p
    where
        p.idParticipacion = e.idParticipacion
            and i.nroPasaporte = p.nroPasaporte
    group by p.nroPasaporte , i.Nombre
    order by Partidos_Jugados) Total
order by partidos_jugados desc;
END$$

DELIMITER ;
\end{verbatim}

\subsubsection{Trigger Valida Arbritro}

\begin{verbatim}
-- Define un nuevo caracter delimitador en lugar del ';'
DELIMITER $$
CREATE
    TRIGGER `validarAsignacionArbitro` BEFORE INSERT
    ON `tp1bd`.`dirigidopor`
    
	FOR EACH ROW BEGIN
		DECLARE idPaisArbitro INT(11);
        DECLARE idPaisLocal INT(11);
		DECLARE idPaisVisita INT(11);

		-- Id del Pais del Arbitro
		SELECT a.idPais INTO @idPaisArbitro
		FROM arbitro a
		WHERE a.idArbitro = NEW.idArbitro;

		-- Ids de los paises de los equipos local y visit
		SELECT s1.idPais, s2.idPais
		INTO @idPaisLocal, @idPaisVisita
		FROM seleccion s1, seleccion s2, partido p
		WHERE
			p.nroPartido = NEW.nroPartido
			AND s1.idPais = p.idSeleccionLocal
			AND s2.idPais = p.idSeleccionVisitante;

        IF @idPaisArbitro = @idPaisLocal OR @idPaisArbitro = @idPaisVisita THEN
            -- Para invalidar la operacion, hacemos un INSERT de NULL invalido
            SET NEW.nroPartido = NULL;
        END IF;
    END;$$
DELIMITER ;
-- Se repone el caracter delimitar por defecto
\end{verbatim}

\subsubsection{Trigger Valida Paises Diferentes}

\begin{verbatim}
-- Define un nuevo caracter delimitador en lugar del ';'
DELIMITER $$
CREATE
    TRIGGER `validarPaisesDiferentes` BEFORE INSERT
    ON `tp1bd`.`Partido`
    
	FOR EACH ROW BEGIN

        IF NEW.idSeleccionLocal = NEW.idSeleccionVisitante THEN
            -- Para invalidar la operacion, hacemos un INSERT de NULL invalido
            SET NEW.nroPartido = NULL;
        END IF;
    END;$$
DELIMITER ;
-- Se repone el caracter delimitar por defecto
\end{verbatim}

\subsubsection{Trigger valida Participaciones}

\begin{verbatim}
 -- Define un nuevo caracter delimitador en lugar del ';'
DELIMITER $$
CREATE
    TRIGGER `validarParticipaciones` BEFORE INSERT
    ON `tp1bd`.`participacion`
    
	FOR EACH ROW BEGIN
		DECLARE cantTitulares INT(11);
		DECLARE cantJugadores INT(11);
		DECLARE idPaisJugador INT(11);

		SELECT j.idSeleccion INTO @idPaisJugador
               FROM integrante j
               WHERE j.nroPasaporte = NEW.nroPasaporte;

		SELECT count(1) Cantidad_Jugadores 
		INTO @cantJugadores
		FROM participacion p , integrante i 
		WHERE p.nroPasaporte = i.nroPasaporte and p.nroPartido = NEW.nroPartido and i.idSeleccion = @idPaisJugador
		GROUP BY idSeleccion, nroPartido;

		SELECT count(1) Cantidad_Jugadores 
		INTO @cantTitulares
		FROM participacion p , integrante i 
		WHERE p.nroPasaporte = i.nroPasaporte and p.nroPartido = NEW.nroPartido and i.idSeleccion = @idPaisJugador
				and esTitular 
		GROUP BY idSeleccion, nroPartido;

        IF @cantJugadores >= 12  or (@cantTitulares >=5 and new.esTitular) THEN
            -- Para invalidar la operacion, hacemos un INSERT de NULL invalido
            SET NEW.idParticipacion = NULL;
        END IF;
    END;$$
DELIMITER ;
-- Se repone el caracter delimitar por defecto
\end{verbatim}





